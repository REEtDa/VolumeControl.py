import cv2 
import mediapipe as mp
import numpy as np
import time    
import handmodule as htm
import math
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume

###########################
wCam, hCam = 640, 480
#############################
cap = cv2.VideoCapture(0)
cap.set(3,wCam)
cap.set(4,hCam)
pTime = 0

detector = htm.handDetector(detectionCon=0.7)


devices = AudioUtilities.GetSpeakers()
interface = devices.Activate(
    IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
volume = cast(interface, POINTER(IAudioEndpointVolume))
# volume.GetMute()
# volume.GetMasterVolumeLevel()
volRange = volume.GetVolumeRange()
# volume.SetMasterVolumeLevel(-5.0, None)
minVol = volRange[0]
maxVol = volRange[1]
volBar = 400
vol = 0
volper = 0


while True:                                                                 
    success , img = cap.read()
    cv2.flip(img,1)
    img = detector.findHands(img)
    lmlist = detector.findPosition(img,draw=False)
    if len(lmlist) != 0:
    #  print(lmlist[4], lmlist[8])

     x1,y1 = lmlist[4][1], lmlist[4][2]
     x2,y2 = lmlist[8][1], lmlist[8][2]
     cx,cy = (x1+x2)//2 ,(y1+y2)//2
     cv2.circle(img, (x1,y1),7, (255,0,255),cv2.FILLED)
     cv2.circle(img, (x2,y2),7, (255,0,255),cv2.FILLED)
     cv2.line(img,(x1,y1),(x2,y2),(255,0,255),3)
     cv2.circle(img,(cx,cy),7,(255,0,255),cv2.FILLED)

     length = math.hypot(x2-x1, y2-y1)
     #print(length)

     #Hand Range from 3 to 200
     # Volume Range from -65 to 0
     vol = np.interp(length,[2,196],[minVol,maxVol])
     volBar = np.interp(length,[2,196],[400,100])
     volper = np.interp(length,[2,196],[0,100])
     #print(vol)
     volume.SetMasterVolumeLevel(vol,None)



     if length<=50:
         cv2.circle(img,(cx,cy),7,(0,0,255),3,cv2.FILLED)

    cv2.rectangle(img ,(40,100),(85,400),(0,255,0),3)
    cv2.rectangle(img ,(40,int(volBar)),(85,400),(0,255,0),cv2.FILLED)


    cTime = time.time()
    fps = 1 / (cTime - pTime)
    pTime = cTime
    cv2.putText(img, f'FPS:{int(fps)}', (10, 70), cv2.FONT_HERSHEY_PLAIN, 3,(255, 0, 0), 3)

    cv2.putText(img, f'{int(volper)}%', (40, 450), cv2.FONT_HERSHEY_PLAIN, 3,(0, 0, 255), 3)
                    

    cv2.imshow("Image", img)
    if cv2.waitKey(1) & 0xFF == ord('q'):
       break
	
